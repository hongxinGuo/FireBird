<?xml version="1.0" encoding="utf-8"?>
<!-- File name extension must be .runsettings -->
<RunSettings>
  <RunConfiguration>
    <TargetPlatform>x64</TargetPlatform>
    <TestSessionTimeout>120000</TestSessionTimeout>  <!-- timeout 120 seconds -->
  </RunConfiguration>
	
  <DataCollectionRunSettings>
    <DataCollectors>
      <DataCollector friendlyName="Code Coverage" uri="datacollector://Microsoft/CodeCoverage/2.0" assemblyQualifiedName="Microsoft.VisualStudio.Coverage.DynamicCoverageDataCollector, Microsoft.VisualStudio.TraceCollector, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
        <Configuration>
          <CodeCoverage>
<!--
Additional paths to search for .pdb (symbol) files. Symbols must be found for modules to be instrumented.
If .pdb files are in the same folder as the .dll or .exe files, they are automatically found. Otherwise, specify them here.
Note that searching for symbols increases code coverage runtime. So keep this small and local.
-->
<!--
            <SymbolSearchPaths>
                   <Path>C:\Users\User\Documents\Visual Studio 2012\Projects\ProjectX\bin\Debug</Path>
                   <Path>\\mybuildshare\builds\ProjectX</Path>
            </SymbolSearchPaths>
-->

<!--
About include/exclude lists:
Empty "Include" clauses imply all; empty "Exclude" clauses imply none.
Each element in the list is a regular expression (ECMAScript syntax). See /visualstudio/ide/using-regular-expressions-in-visual-studio.
An item must first match at least one entry in the include list to be included.
Included items must then not match any entries in the exclude list to remain included.	<ModulePath>.*\.dll$</ModulePath>
-->

            <!-- Match assembly file paths: -->
            <ModulePaths>
              <Include>
                <ModulePath>.*\.exe$</ModulePath>
              </Include>
              <Exclude>
                <ModulePath>.*CPPUnitTestFramework.*</ModulePath>
              </Exclude>
              <!-- Specifies additional list of directories where binaries static native instrumentation should be searched. -->
              <IncludeDirectories>
                <Directory Recursive="true">C:\b59fb11c-1611-4562-9a2b-c35719da65d3</Directory>
              </IncludeDirectories>
            </ModulePaths>

            <!-- Match fully qualified names of functions: -->
            <!-- (Use "\." to delimit namespaces in C# or Visual Basic, "::" in C++.)  -->
            <Functions>
              <Exclude>
                <Function>^Fabrikam\.UnitTest\..*</Function>
                <Function>^std::.*</Function>
	              <Function>^ATL::.*</Function>
								<Function>^FireBirdTest::.*</Function>
                <Function>.*::__GetTestMethodInfo.*</Function>
                <Function>^Microsoft::VisualStudio::CppCodeCoverageFramework::.*</Function>
								<Function>^Microsoft::VisualStudio::CppUnitTestFramework::.*</Function>

								<Function>ThreadUpdateBasicFinancialAnnualDB</Function>
								<Function>ThreadUpdateBasicFinancialQuarterlyDB</Function>
								<Function>ThreadConnectFinnhubWebSocketAndSendMessage</Function>
								<Function>ThreadConnectTiingoCryptoWebSocketAndSendMessage</Function>
								<Function>ThreadConnectTiingoForexWebSocketAndSendMessage</Function>
								<Function>ThreadConnectTiingoIEXWebSocketAndSendMessage</Function>
								<Function>ThreadUpdateTiingoCryptoSymbolDB</Function>
								<Function>ThreadUpdateCompanyNewsDB</Function>
								<Function>ThreadDisconnectWebSocket</Function>
								<Function>ThreadGetWebDataAndProcessIt</Function>
								<Function>ThreadProcessRTData</Function>
								<Function>ThreadUpdateBasicFinancialDB</Function>
								<Function>ReportJsonError</Function>
								<Function>ReportWebError</Function>
	              <Function>to_byte_string</Function>

								<Function>CChinaStock::Calculate10RSStrongStockSet</Function>
								<Function>CChinaStock::Calculate10RSStrong1StockSet</Function>
								<Function>CChinaStock::Calculate10RSStrong2StockSet</Function>
	              <Function>CChinaStock::CalculateWeekLine</Function>
	              <Function>CChinaStock::ReportGuadan</Function>
								<Function>CChinaStock::BuildWeekLine</Function>
								<Function>CChinaStock::CalculatingWeekLine</Function>

	              <Function>CContainerChinaStock::CreateThreadSaveDayLineBasicInfoOfStock</Function>
								<Function>CContainerChinaStock::CreateThreadSaveDayLineBasicInfo</Function>
								<Function>CContainerChinaStock::DeleteTempRTData</Function>
								<Function>CContainerChinaStock::SaveTempRTData</Function>
	              <Function>CContainerChinaStock::UnloadDayLine</Function>

								<Function>CChinaMarket::BuildCurrentWeekWeekLineTable</Function>
								<Function>CChinaMarket::BuildWeekLineOfCurrentWeek</Function>
								<Function>CChinaMarket::DeleteWeekLineBasicInfo</Function>
								<Function>CChinaMarket::DeleteWeekLineExtendInfo</Function>
	              <Function>CChinaMarket::DeleteWeekLineBasicInfo</Function>
	              <Function>CChinaMarket::DeleteWeekLineExtendInfo</Function>
	              <Function>CChinaMarket::CreatingThreadChoice10RSStrongStockSet</Function>
	              <Function>CChinaMarket::DeleteWeekLine</Function>
								<Function>CChinaMarket::SaveRTData</Function>
								<Function>CChinaMarket::DeleteCurrentWeekWeekLineBeforeTheDate</Function>
								<Function>CChinaMarket::CreateThreadBuildDayLineRS</Function>
								<Function>CChinaMarket::CreateThreadBuildDayLineRSOfDate</Function>
								<Function>CChinaMarket::CreateThreadBuildWeekLine</Function>
								<Function>CChinaMarket::CreateThreadBuildWeekLineOfStock</Function>
								<Function>CChinaMarket::CreateThreadBuildWeekLineRS</Function>
								<Function>CChinaMarket::CreateThreadBuildWeekLineRSOfDate</Function>
								<Function>CChinaMarket::CreateThreadBuildWeekLineOfCurrentWeek</Function>
								<Function>CChinaMarket::CreateThreadBuildCurrentWeekWeekLineTable</Function>
								<Function>CChinaMarket::CreateThreadChoice10RSStrong1StockSet</Function>
								<Function>CChinaMarket::CreateThreadChoice10RSStrong2StockSet</Function>
								<Function>CChinaMarket::CreateThreadLoadDayLine</Function>
								<Function>CChinaMarket::CreateThreadLoadWeekLine</Function>
								<Function>CChinaMarket::CreateThreadProcessTodayStock</Function>
	              <Function>CChinaMarket::CreateThreadUpdateStockProfileDB</Function>
	              <Function>CChinaMarket::CreateThreadProcessRTData</Function>
								<Function>CChinaMarket::CreateThreadChoice10RSStrongStockSet</Function>
								<Function>CChinaMarket::CreateThreadUpdateTempRTData</Function>
								<Function>CChinaMarket::CreateThreadLoadTempRTData</Function>
								<Function>CChinaMarket::CreateThreadUpdateChoseStockDB</Function>
								<Function>CChinaMarket::CreateThreadUpdateStockProfileDB</Function>
								<Function>CChinaMarket::CreateThreadSaveStockSection</Function>
	              <Function>CChinaMarket::CreateThreadUpdateOptionDB</Function>

	              <Function>CWorldMarket::CreateThreadUpdateTiingoIndustry</Function>
								<Function>CWorldMarket::CreateThreadUpdateSICIndustry</Function>
								<Function>CWorldMarket::CreateThreadUpdateNaicsIndustry</Function>
								<Function>CWorldMarket::CreateThreadUpdateStockProfileDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateCompanyNewsDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateBasicFinancialDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateCountryListDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateInsiderTransactionDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateInsiderSentimentDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateTiingoStockDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateTiingoCryptoSymbolDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateForexExchangeDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateForexSymbolDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateCryptoExchangeDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateFinnhubCryptoSymbolDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateEconomicCalendarDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateDayLineDB</Function>
								<Function>CWorldMarket::CreateThreadUpdateDayLineStartEndDate</Function>

	              <Function>CWorldMarket::StartFinnhubWebSocket</Function>
								<Function>CWorldMarket::StartTiingoIEXWebSocket</Function>
								<Function>CWorldMarket::StartTiingoCryptoWebSocket</Function>
								<Function>CWorldMarket::StartTiingoForexWebSocket</Function>
								<Function>CWorldMarket::StopFinnhubWebSocketIfTimeOut</Function>
								<Function>CWorldMarket::StopTiingoIEXWebSocketIfTimeOut</Function>
								<Function>CWorldMarket::StopTiingoCryptoWebSocketIfTimeOut</Function>
	              <Function>CWorldMarket::StopTiingoForexWebSocketIfTimeOut</Function>
								<Function>CWorldMarket::ProcessWebSocketData</Function>
	              <Function>CWorldMarket::ProcessFinnhubWebSocketData</Function>
								<Function>CWorldMarket::ProcessTiingoIEXWebSocketData</Function>
								<Function>CWorldMarket::ProcessTiingoCryptoWebSocketData</Function>
	              <Function>CWorldMarket::ProcessTiingoForexWebSocketData</Function>

								<Function>CContainerChinaStock::BuildDayLine</Function>
	              <Function>CContainerChinaStock::BuildDayLineRS</Function>
	              <Function>CContainerChinaStock::BuildWeekLine</Function>
	              <Function>CContainerChinaStock::BuildWeekLineRS</Function>
								<Function>CContainerChinaStock::Choice10RSStrong1StockSet</Function>
								<Function>CContainerChinaStock::Choice10RSStrong2StockSet</Function>
	              <Function>CContainerChinaStock::Choice10RSStrongStockSet</Function>
								<Function>CContainerChinaStock::DeleteDayLineBasicInfo</Function>
								<Function>CContainerChinaStock::DeleteDayLineExtendInfo</Function>
								<Function>CContainerChinaStock::DeleteTodayTempDB</Function>
								<Function>CContainerChinaStock::UpdateTodayTempDB</Function>
								<Function>CContainerChinaStock::TaskSaveDayLineData</Function>


								<Function>CMainFrame::ResetMarket</Function>
	              <Function>CMainFrame::OnCreate</Function>
								<Function>CMainFrame::InitializeDataSourceAndWebInquiry</Function>
	              <Function>CMainFrame::LoadFrame</Function>
	              <Function>CMainFrame::OnToolbarCreateNew</Function>
								<Function>CMainFrame::GetThisMessageMap</Function>
	              <Function>CMainFrame::CreateDockingWindows</Function>
	              <Function>CMainFrame::SetDockingWindowIcons</Function>
	              <Function>CMainFrame::PreCreateWindow</Function>
	              <Function>CMainFrame::OnWindowManager</Function>
								<Function>CMainFrame::OnViewCustomize</Function>
	              <Function>CMainFrame::OnSize</Function>
	              <Function>CMainFrame::OnSettingChange</Function>
								<Function>CMainFrame::OnUpdateWorldStockDayLineStartEnd</Function>
								<Function>CMainFrame::OnRecordTiingoCryptoWebSocket</Function>
								<Function>CMainFrame::OnRecordTiingoForexWebSocket</Function>
								<Function>CMainFrame::OnRecordTiingoIEXWebSocket</Function>
	              <Function>CMainFrame::OnRecordFinnhubWebSocket</Function>
								<Function>CMainFrame::OnCalculate10dayRS1</Function>
								<Function>CMainFrame::OnCalculate10dayRS2</Function>
								<Function>CMainFrame::OnCalculate10dayRS</Function>
								<Function>CMainFrame::OnUpdateStockSection</Function>
								<Function>CMainFrame::ProcessChinaMarketStock</Function>
								<Function>CMainFrame::~CMainFrame</Function>
								<Function>CMainFrame::OnRebuildDayLineRS</Function>
								<Function>CMainFrame::OnRebuildWeekLineRS</Function>
								<Function>CMainFrame::OnBuildCurrentWeekLine</Function>
								<Function>CMainFrame::OnBuildRebuildCurrentWeekLine</Function>
								<Function>CMainFrame::SchedulingTask</Function>
								<Function>CMainFrame::CalculateTodayRS</Function>
								<Function>CMainFrame::OnStopUpdateDayLine</Function>
								<Function>CMainFrame::OnBuildCreateWeekLine</Function>
								<Function>CMainFrame::OnBuildRebuildCurrentWeekWeekLineTable</Function>
								<Function>CMainFrame::OnUpdateStockCode</Function>
								<Function>CMainFrame::OnRebuildEpsSurprise</Function>
								<Function>CMainFrame::OnRebuildPeer</Function>
								<Function>CMainFrame::OnRebuildDayLine</Function>
								<Function>CMainFrame::OnRebuildBasicFinancial</Function>
								<Function>CMainFrame::OnMaintainDayLine</Function>
	              <Function>CMainFrame::SysCallOnTimer</Function>
	              <Function>CMainFrame::SysCallSetPaneText</Function>
	              <Function>CMainFrame::SysCallSetInnerSystemPaneText</Function>
	              <Function>CMainFrame::SysCallOnSysCommand</Function>
	              <Function>CMainFrame::SysCallCmdUIEnable</Function>
	              <Function>CMainFrame::SysCallCmdUISetCheck</Function>
	              <Function>CMainFrame::SysCallSendMessage</Function>
	              <Function>CMainFrame::SysCallPreTranslateMessage</Function>
								<Function>CMainFrame::SysCallInvalidate</Function>
								<Function>CMainFrame::SysCallOnChar</Function>
								<Function>CMainFrame::SysCallOnKeyUp</Function>

								<Function>CVirtualMarket::SchedulingTask</Function>
								<Function>CVirtualMarket::SchedulingTaskPerSecond</Function>
								<Function>CVirtualMarket::RunDataSource</Function>
	              <Function>CVirtualMarket::ProcessTask</Function>
	              <Function>CVirtualMarket::ResetMarket</Function>

								<Function>CVirtualDataHistoryCandleExtend::ShowData</Function>

								<Function>CTodayTempDB::DeleteCurrentContent</Function>

								<Function>CVirtualDataSource::VerifyDataLength</Function>
								<Function>CVirtualDataSource::QueryDataLength</Function>
								<Function>CVirtualDataSource::TESTSetBuffer</Function>
								<Function>CVirtualDataSource::ReadWebFileOneTime</Function>
	              <Function>CVirtualDataSource::DeleteWebFile</Function>
								<Function>CVirtualDataSource::GetFileHeaderInformation</Function>
								<Function>CVirtualDataSource::OpenFile</Function>
								<Function>CVirtualDataSource::CreateThreadGetWebDataAndProcessIt</Function>
								<Function>CVirtualDataSource::Reset</Function>
	              <Function>CVirtualDataSource::GetTickCount</Function>
								<Function>CVirtualDataSource::ConfigureSession</Function>
								<Function>CVirtualDataSource::UpdateStatus</Function>

								<Function>CVirtualWebSocket::Connecting</Function>
								<Function>CVirtualWebSocket::CreateThreadDisconnectWebSocket</Function>
								<Function>CVirtualWebSocket::Connect</Function>
								<Function>CVirtualWebSocket::Send</Function>
								<Function>CVirtualWebSocket::StartWebSocket</Function>
								<Function>CVirtualWebSocket::StopWebSocket</Function>
								<Function>CVirtualWebSocket::SendString</Function>

								<Function>CFinnhubWebSocket::Connect</Function>
								<Function>CFinnhubWebSocket::Send</Function>
								<Function>CFinnhubWebSocket::CreateThreadConnectWebSocket</Function>
	              <Function>CFinnhubWebSocket::CreateThreadConnectWebSocketAndSendMessage</Function>

								<Function>CTiingoForexWebSocket::Connect</Function>
								<Function>CTiingoForexWebSocket::Send</Function>
								<Function>CTiingoForexWebSocket::CreateThreadConnectWebSocket</Function>
	              <Function>CTiingoForexWebSocket::CreateThreadConnectWebSocketAndSendMessage</Function>

								<Function>CTiingoCryptoWebSocket::Connect</Function>
	              <Function>CTiingoCryptoWebSocket::Send</Function>
								<Function>CTiingoCryptoWebSocket::CreateThreadConnectWebSocket</Function>
	              <Function>CTiingoCryptoWebSocket::CreateThreadConnectWebSocketAndSendMessage</Function>

								<Function>CTiingoIEXWebSocket::Connect</Function>
	              <Function>CTiingoIEXWebSocket::Send</Function>
								<Function>CTiingoIEXWebSocket::CreateThreadConnectWebSocket</Function>
	              <Function>CTiingoIEXWebSocket::CreateThreadConnectWebSocketAndSendMessage</Function>

							</Exclude>
            </Functions>

            <!-- Match attributes on any code element: -->
            <Attributes>
              <Exclude>
                <!-- Don't forget "Attribute" at the end of the name -->
                <Attribute>^System\.Diagnostics\.DebuggerHiddenAttribute$</Attribute>
                <Attribute>^System\.Diagnostics\.DebuggerNonUserCodeAttribute$</Attribute>
                <Attribute>^System\.CodeDom\.Compiler\.GeneratedCodeAttribute$</Attribute>
                <Attribute>^System\.Diagnostics\.CodeAnalysis\.ExcludeFromCodeCoverageAttribute$</Attribute>
              </Exclude>
            </Attributes>

            <!-- Match the path of the source files in which each method is defined: -->
            <Sources>
              <Exclude>
								<Source>.*\\atlmfc\\.*</Source>
	              <Source>.*\\vctools\\.*</Source>
	              <Source>.*\\public\\sdk\\.*</Source>
	              <Source>.*\\microsoft sdks\\.*</Source>
	              <Source>C:\\Program Files (x86)\\*.*</Source>
                <Source>C:\\Program Files\\*.*</Source>
                <Source>.*\\vc\\include\\.*</Source>
	              <Source>d:\\cfiles\\projects\\winssl\\*.*</Source>
                <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\gsl\\*.*</Source>
                <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\googletest\\*.*</Source>
                <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\Packages\\*.*</Source>
                <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\GoogleUnitTest\\*.*</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\ixwebsocket\\*.*</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\vld\\*.*</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\OPenSSL\\*.*</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\FireBird\\source\\DataBase\\*.*</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\*.*</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\libcurl\\*.*</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\libcurl\\lib\\*.*</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\zlib\\*.*</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\zlib\\lib\\*.*</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\lib\\nlohmann json\\*.*</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\FireBirdDoc.cpp</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\FireBirdDoc.h</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\FireBird.cpp</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\FireBird.h</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\FireBirdView.cpp</Source>
	              <Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\FireBirdView.h</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\OutputWnd.cpp</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\OutputWnd.h</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\PropertiesWnd.cpp</Source>
								<Source>C:\\users\\hxguo\\source\\repos\\FireBird\\src\\windows interface\\PropertiesWnd.h</Source>
              </Exclude>
            </Sources>

            <!-- Match the company name property in the assembly: -->
            <CompanyNames>
              <Exclude>
                <CompanyName>.*microsoft.*</CompanyName>
              </Exclude>
            </CompanyNames>

            <!-- Match the public key token of a signed assembly: -->
            <PublicKeyTokens>
              <!-- Exclude Visual Studio extensions: -->
              <Exclude>
                <PublicKeyToken>^B77A5C561934E089$</PublicKeyToken>
                <PublicKeyToken>^B03F5F7F11D50A3A$</PublicKeyToken>
                <PublicKeyToken>^31BF3856AD364E35$</PublicKeyToken>
                <PublicKeyToken>^89845DCD8080CC91$</PublicKeyToken>
                <PublicKeyToken>^71E9BCE111E9429C$</PublicKeyToken>
                <PublicKeyToken>^8F50407C4E9E73B6$</PublicKeyToken>
                <PublicKeyToken>^E361AF139669C375$</PublicKeyToken>
              </Exclude>
            </PublicKeyTokens>

            <!-- We recommend you do not change the following values: -->

            <!-- Set this to True to collect coverage information for functions marked with the "SecuritySafeCritical" attribute. Instead of writing directly into a memory location from such functions, code coverage inserts a probe that redirects to another function, which in turns writes into memory. -->
            <UseVerifiableInstrumentation>True</UseVerifiableInstrumentation>
            <!-- When set to True, collects coverage information from child processes that are launched with low-level ACLs, for example, UWP apps. -->
            <AllowLowIntegrityProcesses>True</AllowLowIntegrityProcesses>
            <!-- When set to True, collects coverage information from child processes that are launched by test or production code. -->
            <CollectFromChildProcesses>True</CollectFromChildProcesses>
            <!-- When set to True, restarts the IIS process and collects coverage information from it. -->
            <CollectAspDotNet>False</CollectAspDotNet>
            <!-- When set to True, static native instrumentation will be enabled. -->
            <EnableStaticNativeInstrumentation>True</EnableStaticNativeInstrumentation>
            <!-- When set to True, dynamic native instrumentation will be enabled. -->
            <EnableDynamicNativeInstrumentation>True</EnableDynamicNativeInstrumentation>
            <!-- When set to True, instrumented binaries on disk are removed and original files are restored. -->
            <EnableStaticNativeInstrumentationRestore>True</EnableStaticNativeInstrumentationRestore>

          </CodeCoverage>
        </Configuration>
      </DataCollector>
    </DataCollectors>
  </DataCollectionRunSettings>
</RunSettings>