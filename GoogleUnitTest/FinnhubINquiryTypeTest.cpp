#include"pch.h"

////#include"gtest/gtest.h"

#include"WorldMarket.h"

import FireBird.FinnhubInquiryType;

using namespace testing;

namespace FireBirdTest {
	TEST(FinnhubInquiryTypeTest, Test) {
		EXPECT_EQ(WEBSOCKET_TRADES_, 1);
		EXPECT_EQ(WEBSOCKET_NEWS_, WEBSOCKET_TRADES_ + 1);

		EXPECT_EQ(SYMBOL_LOOKUP_, WEBSOCKET_TRADES_ + 100);
		EXPECT_EQ(STOCK_SYMBOLS_, SYMBOL_LOOKUP_ + 1);
		EXPECT_EQ(MARKET_STATUS_, STOCK_SYMBOLS_ + 1);
		EXPECT_EQ(MARKET_HOLIDAY_, MARKET_STATUS_ + 1);
		EXPECT_EQ(COMPANY_PROFILE_, MARKET_HOLIDAY_ + 1);
		EXPECT_EQ(COMPANY_PROFILE_CONCISE_, COMPANY_PROFILE_ + 1);
		EXPECT_EQ(COMPANY_EXECUTIVE_, COMPANY_PROFILE_CONCISE_ + 1);
		EXPECT_EQ(MARKET_NEWS_, COMPANY_EXECUTIVE_ + 1);
		EXPECT_EQ(COMPANY_NEWS_, MARKET_NEWS_ + 1);
		EXPECT_EQ(PRESS_RELEASE_, COMPANY_NEWS_ + 1);
		EXPECT_EQ(NEWS_SENTIMENT_, PRESS_RELEASE_ + 1);
		EXPECT_EQ(PEERS_, NEWS_SENTIMENT_ + 1);
		EXPECT_EQ(BASIC_FINANCIALS_, PEERS_ + 1);
		EXPECT_EQ(OWNERSHIP_, BASIC_FINANCIALS_ + 1);
		EXPECT_EQ(FUND_OWNERSHIP_, OWNERSHIP_ + 1);
		EXPECT_EQ(INSIDER_TRANSACTION_, FUND_OWNERSHIP_ + 1);
		EXPECT_EQ(INSIDER_SENTIMENT_, INSIDER_TRANSACTION_ + 1);
		EXPECT_EQ(FINANCIAL_, INSIDER_SENTIMENT_ + 1);
		EXPECT_EQ(FINANCIAL_AS_REPORTED_, FINANCIAL_ + 1);
		EXPECT_EQ(REVENUE_BREAKDOWN_, FINANCIAL_AS_REPORTED_ + 1);
		EXPECT_EQ(SEC_FILINGS_, REVENUE_BREAKDOWN_ + 1);
		EXPECT_EQ(INTERNATIONAL_FILINGS_, SEC_FILINGS_ + 1);
		EXPECT_EQ(SEC_SENTIMENT_ANALYSIS_, INTERNATIONAL_FILINGS_ + 1);
		EXPECT_EQ(SIMILARITY_INDEX_, SEC_SENTIMENT_ANALYSIS_ + 1);
		EXPECT_EQ(IPO_CALENDAR_, SIMILARITY_INDEX_ + 1);
		EXPECT_EQ(DIVIDENDS_, IPO_CALENDAR_ + 1);
		EXPECT_EQ(SECTOR_METRICS_, DIVIDENDS_ + 1);
		EXPECT_EQ(PRICE_METRICS_, SECTOR_METRICS_ + 1);
		EXPECT_EQ(SYMBOL_CHANGE_, PRICE_METRICS_ + 1);
		EXPECT_EQ(ISIN_CHANGE_, SYMBOL_CHANGE_ + 1);

		EXPECT_EQ(STOCK_ESTIMATES_RECOMMENDATION_TRENDS_, SYMBOL_LOOKUP_ + 100);
		EXPECT_EQ(STOCK_ESTIMATES_PRICE_TARGET_, STOCK_ESTIMATES_RECOMMENDATION_TRENDS_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_UPGRADE_DOWNGRADE_, STOCK_ESTIMATES_PRICE_TARGET_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_REVENUE_ESTIMATES_, STOCK_ESTIMATES_UPGRADE_DOWNGRADE_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_EPS_ESTIMATES_, STOCK_ESTIMATES_REVENUE_ESTIMATES_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_EBITDA_ESTIMATES_, STOCK_ESTIMATES_EPS_ESTIMATES_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_EBIT_ESTIMATES_, STOCK_ESTIMATES_EBITDA_ESTIMATES_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_EPS_SURPRISE_, STOCK_ESTIMATES_EBIT_ESTIMATES_ + 1);
		EXPECT_EQ(STOCK_ESTIMATES_EARNING_CALENDAR_, STOCK_ESTIMATES_EPS_SURPRISE_ + 1);

		EXPECT_EQ(STOCK_PRICE_QUOTE_, STOCK_ESTIMATES_RECOMMENDATION_TRENDS_ + 100);
		EXPECT_EQ(STOCK_PRICE_CANDLES_, STOCK_PRICE_QUOTE_ + 1);
		EXPECT_EQ(STOCK_PRICE_TICK_DATA_, STOCK_PRICE_CANDLES_ + 1);
		EXPECT_EQ(STOCK_PRICE_HISTORICAL_NBBO_, STOCK_PRICE_TICK_DATA_ + 1);
		EXPECT_EQ(STOCK_PRICE_LAST_BID_ASK_, STOCK_PRICE_HISTORICAL_NBBO_ + 1);
		EXPECT_EQ(STOCK_PRICE_SPLITS_, STOCK_PRICE_LAST_BID_ASK_ + 1);
		EXPECT_EQ(STOCK_PRICE_DIVIDEND2_, STOCK_PRICE_SPLITS_ + 1);

		EXPECT_EQ(ETFS_INDICES_CONSTITUENTS_, STOCK_PRICE_QUOTE_ + 100);
		EXPECT_EQ(ETFS_HISTORY_CONSTITUENTS_, ETFS_INDICES_CONSTITUENTS_ + 1);
		EXPECT_EQ(ETFS_PROFILE_, ETFS_HISTORY_CONSTITUENTS_ + 1);
		EXPECT_EQ(ETFS_HOLDINGS_, ETFS_PROFILE_ + 1);
		EXPECT_EQ(ETFS_SECTOR_, ETFS_HOLDINGS_ + 1);
		EXPECT_EQ(ETFS_COUNTRY_, ETFS_SECTOR_ + 1);

		EXPECT_EQ(MUTUAL_FUND_PROFILE_, ETFS_INDICES_CONSTITUENTS_ + 100);
		EXPECT_EQ(MUTUAL_FUND_HOLDINGS_, MUTUAL_FUND_PROFILE_ + 1);
		EXPECT_EQ(MUTUAL_FUND_SECTOR_, MUTUAL_FUND_HOLDINGS_ + 1);
		EXPECT_EQ(MUTUAL_FUND_COUNTRY_, MUTUAL_FUND_SECTOR_ + 1);

		EXPECT_EQ(BOND_PROFILE_, MUTUAL_FUND_PROFILE_ + 100);
		EXPECT_EQ(BOND_PRICE_, BOND_PROFILE_ + 1);

		EXPECT_EQ(FOREX_EXCHANGE_, BOND_PROFILE_ + 100);
		EXPECT_EQ(FOREX_SYMBOLS_, FOREX_EXCHANGE_ + 1);
		EXPECT_EQ(FOREX_CANDLES_, FOREX_SYMBOLS_ + 1);
		EXPECT_EQ(FOREX_ALL_RATES_, FOREX_CANDLES_ + 1);

		EXPECT_EQ(CRYPTO_EXCHANGE_, FOREX_EXCHANGE_ + 100);
		EXPECT_EQ(CRYPTO_SYMBOLS_, CRYPTO_EXCHANGE_ + 1);
		EXPECT_EQ(CRYPTO_PROFILE_, CRYPTO_SYMBOLS_ + 1);
		EXPECT_EQ(CRYPTO_CANDLES_, CRYPTO_PROFILE_ + 1);

		EXPECT_EQ(TECHNICAL_ANALYSIS_PATTERN_RECOGNITION_, CRYPTO_EXCHANGE_ + 100);
		EXPECT_EQ(TECHNICAL_ANALYSIS_SUPPORT_RESISTANCE_, TECHNICAL_ANALYSIS_PATTERN_RECOGNITION_ + 1);
		EXPECT_EQ(TECHNICAL_ANALYSIS_AGGREGATE_INDICATORS_, TECHNICAL_ANALYSIS_SUPPORT_RESISTANCE_ + 1);
		EXPECT_EQ(TECHNICAL_ANALYSIS_TECHNICAL_INDICATORS_, TECHNICAL_ANALYSIS_AGGREGATE_INDICATORS_ + 1);

		EXPECT_EQ(ALTERNATIVE_DATA_TRANSCRIPT_LIST_, TECHNICAL_ANALYSIS_PATTERN_RECOGNITION_ + 100);
		EXPECT_EQ(ALTERNATIVE_DATA_TRANSCRIPT_, ALTERNATIVE_DATA_TRANSCRIPT_LIST_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_SOCIAL_SENTIMENT_, ALTERNATIVE_DATA_TRANSCRIPT_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_INVEST_THEMES_, ALTERNATIVE_DATA_SOCIAL_SENTIMENT_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_SUPPLY_CHAIN_, ALTERNATIVE_DATA_INVEST_THEMES_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_COMPANY_ESG_, ALTERNATIVE_DATA_SUPPLY_CHAIN_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_EARNING_QUALITY_SCORE_, ALTERNATIVE_DATA_COMPANY_ESG_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_USPTO_PATENTS_, ALTERNATIVE_DATA_EARNING_QUALITY_SCORE_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_VISA_APPLICATION_, ALTERNATIVE_DATA_USPTO_PATENTS_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_SENATE_LOBBYING_, ALTERNATIVE_DATA_VISA_APPLICATION_+1);
		EXPECT_EQ(ALTERNATIVE_DATA_USA_SPENDING_, ALTERNATIVE_DATA_SENATE_LOBBYING_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_CONGRESSIONAL_TRADING_, ALTERNATIVE_DATA_USA_SPENDING_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_COVID_19_, ALTERNATIVE_DATA_CONGRESSIONAL_TRADING_ + 1);
		EXPECT_EQ(ALTERNATIVE_DATA_FDA_CALENDAR_, ALTERNATIVE_DATA_COVID_19_ + 1);

		EXPECT_EQ(ECONOMIC_COUNTRY_LIST_, ALTERNATIVE_DATA_TRANSCRIPT_LIST_ + 100);
		EXPECT_EQ(ECONOMIC_CALENDAR_, ECONOMIC_COUNTRY_LIST_ + 1);
		EXPECT_EQ(ECONOMIC_CODES_, ECONOMIC_CALENDAR_ + 1);
		EXPECT_EQ(ECONOMIC_ECONOMIC_, ECONOMIC_CODES_ + 1);
	}
}
