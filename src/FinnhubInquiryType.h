#pragma once

// Finnhub申请类别和代码，免费账户无法申请Premium类的信息
enum {
	// Web Socket
	WEBSOCKET_TRADES_ = 1,
	WEBSOCKET_NEWS_ = WEBSOCKET_TRADES_ + 1, // Premium

	// Stock Fundamentals
	SYMBOL_LOOKUP_ = WEBSOCKET_TRADES_ + 100,
	STOCK_SYMBOLS_ = SYMBOL_LOOKUP_ + 1,
	MARKET_STATUS_ = STOCK_SYMBOLS_ + 1,
	MARKET_HOLIDAY_ = MARKET_STATUS_ + 1,
	COMPANY_PROFILE_ = MARKET_HOLIDAY_ + 1, //Premium
	COMPANY_PROFILE_CONCISE_ = COMPANY_PROFILE_ + 1,
	COMPANY_EXECUTIVE_ = COMPANY_PROFILE_CONCISE_ + 1, //Premium
	MARKET_NEWS_ = COMPANY_EXECUTIVE_ + 1,
	COMPANY_NEWS_ = MARKET_NEWS_ + 1,
	PRESS_RELEASE_ = COMPANY_NEWS_ + 1, //Premium
	NEWS_SENTIMENT_ = PRESS_RELEASE_ + 1,
	PEERS_ = NEWS_SENTIMENT_ + 1,
	BASIC_FINANCIALS_ = PEERS_ + 1,
	OWNERSHIP_ = BASIC_FINANCIALS_ + 1, //Premium
	FUND_OWNERSHIP_ = OWNERSHIP_ + 1, //Premium
	INSIDER_TRANSACTION_ = FUND_OWNERSHIP_ + 1,
	INSIDER_SENTIMENT_ = INSIDER_TRANSACTION_ + 1,
	FINANCIAL_ = INSIDER_SENTIMENT_ + 1, //Premium
	FINANCIAL_AS_REPORTED_ = FINANCIAL_ + 1,
	REVENUE_BREAKDOWN_ = FINANCIAL_AS_REPORTED_ + 1,
	SEC_FILINGS_ = REVENUE_BREAKDOWN_ + 1, // not implemented
	INTERNATIONAL_FILINGS_ = SEC_FILINGS_ + 1, //Premium
	SEC_SENTIMENT_ANALYSIS_ = INTERNATIONAL_FILINGS_ + 1, //Premium
	SIMILARITY_INDEX_ = SEC_SENTIMENT_ANALYSIS_ + 1, //Premium
	IPO_CALENDAR_ = SIMILARITY_INDEX_ + 1,
	DIVIDENDS_ = IPO_CALENDAR_ + 1, //Premium
	SECTOR_METRICS_ = DIVIDENDS_ + 1, // Premium
	PRICE_METRICS_ = SECTOR_METRICS_ + 1, // Premium
	SYMBOL_CHANGE_ = PRICE_METRICS_ + 1, // Premium
	ISIN_CHANGE_ = SYMBOL_CHANGE_ + 1, // Premium

	// Stock Estimates
	STOCK_ESTIMATES_RECOMMENDATION_TRENDS_ = SYMBOL_LOOKUP_ + 100, // not implemented
	STOCK_ESTIMATES_PRICE_TARGET_ = STOCK_ESTIMATES_RECOMMENDATION_TRENDS_ + 1, // Premium
	STOCK_ESTIMATES_UPGRADE_DOWNGRADE_ = STOCK_ESTIMATES_PRICE_TARGET_ + 1, // Premium
	STOCK_ESTIMATES_REVENUE_ESTIMATES_ = STOCK_ESTIMATES_UPGRADE_DOWNGRADE_ + 1, // Premium
	STOCK_ESTIMATES_EPS_ESTIMATES_ = STOCK_ESTIMATES_REVENUE_ESTIMATES_ + 1, // Premium
	STOCK_ESTIMATES_EBITDA_ESTIMATES_ = STOCK_ESTIMATES_EPS_ESTIMATES_ + 1, // Premium
	STOCK_ESTIMATES_EBIT_ESTIMATES_ = STOCK_ESTIMATES_EBITDA_ESTIMATES_ + 1, // Premium
	STOCK_ESTIMATES_EPS_SURPRISE_ = STOCK_ESTIMATES_EBIT_ESTIMATES_ + 1,
	STOCK_ESTIMATES_EARNING_CALENDAR_ = STOCK_ESTIMATES_EPS_SURPRISE_ + 1,

	// Stock Price
	STOCK_PRICE_QUOTE_ = STOCK_ESTIMATES_RECOMMENDATION_TRENDS_ + 100, // 实时数据优先级最低
	STOCK_PRICE_CANDLES_ = STOCK_PRICE_QUOTE_ + 1, // 历史数据优先级低
	STOCK_PRICE_TICK_DATA_ = STOCK_PRICE_CANDLES_ + 1, // Premium
	STOCK_PRICE_HISTORICAL_NBBO_ = STOCK_PRICE_TICK_DATA_ + 1, //Premium
	STOCK_PRICE_LAST_BID_ASK_ = STOCK_PRICE_HISTORICAL_NBBO_ + 1, // Premium
	STOCK_PRICE_SPLITS_ = STOCK_PRICE_LAST_BID_ASK_ + 1, // Premium
	STOCK_PRICE_DIVIDEND2_ = STOCK_PRICE_SPLITS_ + 1, //Premium

	// ETF & Indices
	ETFS_INDICES_CONSTITUENTS_ = STOCK_PRICE_QUOTE_ + 100, // Premium
	ETFS_HISTORY_CONSTITUENTS_ = ETFS_INDICES_CONSTITUENTS_ + 1, // Premium
	ETFS_PROFILE_ = ETFS_HISTORY_CONSTITUENTS_ + 1, // Premium
	ETFS_HOLDINGS_ = ETFS_PROFILE_ + 1, // Premium
	ETFS_SECTOR_ = ETFS_HOLDINGS_ + 1, // Premium
	ETFS_COUNTRY_ = ETFS_SECTOR_ + 1, //Premium

	// Mutual funds
	MUTUAL_FUND_PROFILE_ = ETFS_INDICES_CONSTITUENTS_ + 100, // Premium
	MUTUAL_FUND_HOLDINGS_ = MUTUAL_FUND_PROFILE_ + 1, // Premium
	MUTUAL_FUND_SECTOR_ = MUTUAL_FUND_HOLDINGS_ + 1, // Premium
	MUTUAL_FUND_COUNTRY_ = MUTUAL_FUND_SECTOR_ + 1, // Premium
	MUTUAL_FUNDS_EET_ = MUTUAL_FUND_COUNTRY_ + 1, // Premium
	MUTUAL_FUNDS_EET_PAI_ = MUTUAL_FUNDS_EET_ + 1, // Premium

	// Bonds
	BOND_PROFILE_ = MUTUAL_FUND_PROFILE_ + 100, // Premium
	BOND_PRICE_ = BOND_PROFILE_ + 1, // Premium
	BOND_TICK_TRADE_DATA_ = BOND_PRICE_ + 1, // Premium
	BOND_YIELD_CURVE_ = BOND_TICK_TRADE_DATA_ + 1, // Premium

	// Forex
	FOREX_EXCHANGE_ = BOND_PROFILE_ + 100,
	FOREX_SYMBOLS_ = FOREX_EXCHANGE_ + 1,
	FOREX_CANDLES_ = FOREX_SYMBOLS_ + 1, // Premium
	FOREX_ALL_RATES_ = FOREX_CANDLES_ + 1, // Premium

	// Crypto
	CRYPTO_EXCHANGE_ = FOREX_EXCHANGE_ + 100,
	CRYPTO_SYMBOLS_ = CRYPTO_EXCHANGE_ + 1,
	CRYPTO_PROFILE_ = CRYPTO_SYMBOLS_ + 1, // Premium
	CRYPTO_CANDLES_ = CRYPTO_PROFILE_ + 1,

	// Technical Analysis
	TECHNICAL_ANALYSIS_PATTERN_RECOGNITION_ = CRYPTO_EXCHANGE_ + 100, // Premium
	TECHNICAL_ANALYSIS_SUPPORT_RESISTANCE_ = TECHNICAL_ANALYSIS_PATTERN_RECOGNITION_ + 1, // Premium
	TECHNICAL_ANALYSIS_AGGREGATE_INDICATORS_ = TECHNICAL_ANALYSIS_SUPPORT_RESISTANCE_ + 1, // Premium
	TECHNICAL_ANALYSIS_TECHNICAL_INDICATORS_ = TECHNICAL_ANALYSIS_AGGREGATE_INDICATORS_ + 1,

	// Alternative Data
	ALTERNATIVE_DATA_TRANSCRIPT_LIST_ = TECHNICAL_ANALYSIS_PATTERN_RECOGNITION_ + 100, //Premium
	ALTERNATIVE_DATA_TRANSCRIPT_ = ALTERNATIVE_DATA_TRANSCRIPT_LIST_ + 1, //Premium
	ALTERNATIVE_DATA_SOCIAL_SENTIMENT_ = ALTERNATIVE_DATA_TRANSCRIPT_ + 1, // Premium
	ALTERNATIVE_DATA_INVEST_THEMES_ = ALTERNATIVE_DATA_SOCIAL_SENTIMENT_ + 1, // Premium
	ALTERNATIVE_DATA_SUPPLY_CHAIN_ = ALTERNATIVE_DATA_INVEST_THEMES_ + 1, // Premium
	ALTERNATIVE_DATA_COMPANY_ESG_ = ALTERNATIVE_DATA_SUPPLY_CHAIN_ + 1, // Premium
	ALTERNATIVE_DATA_EARNING_QUALITY_SCORE_ = ALTERNATIVE_DATA_COMPANY_ESG_ + 1, // Premium
	ALTERNATIVE_DATA_USPTO_PATENTS_ = ALTERNATIVE_DATA_EARNING_QUALITY_SCORE_ + 1,
	ALTERNATIVE_DATA_VISA_APPLICATION_ = ALTERNATIVE_DATA_USPTO_PATENTS_ + 1,
	ALTERNATIVE_DATA_SENATE_LOBBYING_ = ALTERNATIVE_DATA_VISA_APPLICATION_ + 1, // not implemented
	ALTERNATIVE_DATA_USA_SPENDING_ = ALTERNATIVE_DATA_SENATE_LOBBYING_ + 1, // not implemented
	ALTERNATIVE_DATA_CONGRESSIONAL_TRADING_ = ALTERNATIVE_DATA_USA_SPENDING_ + 1, // Premium 
	ALTERNATIVE_DATA_COVID_19_ = ALTERNATIVE_DATA_CONGRESSIONAL_TRADING_ + 1,
	ALTERNATIVE_DATA_FDA_CALENDAR_ = ALTERNATIVE_DATA_COVID_19_ + 1,

	// Economic
	ECONOMIC_COUNTRY_LIST_ = ALTERNATIVE_DATA_TRANSCRIPT_LIST_ + 100,
	ECONOMIC_CALENDAR_ = ECONOMIC_COUNTRY_LIST_ + 1, //Premium
	ECONOMIC_CODES_ = ECONOMIC_CALENDAR_ + 1, //Premium
	ECONOMIC_ECONOMIC_ = ECONOMIC_CODES_ + 1,	//Premium

	// Global Filings Search

	// Tiingo.com
	TIINGO_FUNDAMENTAL_DEFINITION_ = 3000,
	TIINGO_FINANCIAL_STATEMENT_,
	TIINGO_IEX_TOP_OF_BOOK_,
};

class CFinnhubInquiryType {
public:
	CFinnhubInquiryType();
	~CFinnhubInquiryType() = default;

	CString GetInquiryString(long lInquiryType);
	long GetInquiryType(const CString& strInquiryString) const;

	void CreateFinnhubInquiryIndexToStringMap();
	void CreateFinnhubInquiryStringToIndexMap();

protected:
	map<size_t, CString> m_mapFinnhubInquiryIndexToString;
	map<CString, size_t> m_mapFinnhubInquiryStringToIndex;
};

extern CFinnhubInquiryType gl_FinnhubInquiryType;
